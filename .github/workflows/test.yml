name: test

on:
  push:
    branches:
      - main
      - master
  pull_request:
  merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  MINIMUM_PYTHON_VERSION: "3.10"
  UV_VERSION: "0.6.17"

jobs:
  coverage:
    # This action runs tests for coverage collection and uploads them to codecov.io.
    # This requires the secret `CODECOV_TOKEN` be set as secret on GitHub, both for
    # Actions and Dependabot

    name: "${{ matrix.os }} / ${{ matrix.python-version }} / coverage"
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        os: [ubuntu]
        python-version:
          # remove the unused versions
          - "3.10"
          - "3.11"
          # - "3.12" TODO: memcache build fails
          # - "3.13" TODO: memcache build fails

    runs-on: ${{ matrix.os }}-latest
    env:
      OS: ${{ matrix.os }}-latest
      PYTHON: ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up uv
        uses: astral-sh/setup-uv@v6
        with:
          version: ${{ env.UV_VERSION }}
          enable-cache: true

      - name: Set up Python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: make install-dev

      - name: Run tests for coverage
        run: make test-w-coverage cov_report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          # directory: ./coverage
          env_vars: OS,PYTHON
          fail_ci_if_error: true
          # files: ./coverage/coverage.xml
          # flags: unittests
          # name: codecov-umbrella
          verbose: true

  doctests:
    # This action runs doctests for coverage collection and uploads them to codecov.io.
    # This requires the secret `CODECOV_TOKEN` be set as secret on GitHub, both for
    # Actions and Dependabot

    name: "${{ matrix.os }} / 3.10 / doctest"
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        os: [ubuntu]

    runs-on: ${{ matrix.os }}-latest
    env:
      OS: ${{ matrix.os }}-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up uv
        uses: astral-sh/setup-uv@v6
        with:
          version: ${{ env.UV_VERSION }}
          enable-cache: true

      - name: Set up Python ${{ env.MINIMUM_PYTHON_VERSION }}
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.MINIMUM_PYTHON_VERSION }}

      - name: Install dependencies
        run: make install-dev
      #----------------------------------------------
      # Run tests and upload coverage
      #----------------------------------------------
      - name: make doc-tests
        run: make doc-tests cov_report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          # directory: ./coverage
          env_vars: OS,PYTHON,TESTTYPE
          fail_ci_if_error: true
          # files: ./coverage/coverage.xml
          # flags: unittests
          # name: codecov-umbrella
          verbose: true
        env:
          PYTHON: ${{ env.MINIMUM_PYTHON_VERSION }}
          TESTTYPE: doctest

  # https://github.com/marketplace/actions/alls-green#why used for branch protection checks
  test-check:
    if: always()
    needs:
      - coverage
      - doctests
    runs-on: ubuntu-latest
    permissions: {}
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
